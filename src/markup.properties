# Global settings for all tool markup together
# --------------------------------------------
maxDeductionsInFile       = ${maxDeduction}
maxDeductionsInAssignment = ${maxDeduction}
groups = \
    naming,\
    formatting,\
    formattingWarning,\
    coding,\
    codingMinor,\
    codingWarning,\
    documentation,\
    testing,\
    testingMinor,\
    suggestion
groupNames = \
    Naming,\
    Formatting,\
    Formatting,\
    Code Style,\
    Code Style,\
    Code Style,\
    Documentation,\
    Testing,\
    Testing,\
    Suggestion

# Defaults for group-wide limits
# --------------------------------------------
groupDefault.maxDeductionsInFile        = ${maxDeduction}
groupDefault.maxDeductionsInAssignment  = ${maxDeduction}

# Defaults for rules limits
# --------------------------------------------
ruleDefault.group                       = coding
ruleDefault.deduction                   = 1
ruleDefault.category                    = Error
#ruleDefault.maxBeforeCollapsing        = 100000
ruleDefault.maxDeductionsInFile         = ${maxDeduction}
ruleDefault.maxDeductionsInAssignment   = ${maxDeduction}


# Naming
# --------------------------------------------
naming.ruleDefault.category             = Error
naming.ruleDefault.deduction            = 2

# Naming Checkstyle
# --------------------
ConstantName.group                      = naming
LocalVariableName.group                 = naming
LocalFinalVariableName.group            = naming
MemberName.group                        = naming
MethodName.group                        = naming
ParameterName.group                     = naming
StaticVariableName.group                = naming
TypeName.group                          = naming
MethodTypeParameterName.group           = naming
ClassTypeParameterName.group            = naming
PackageName.group                       = naming

# Naming PMD
# --------------------
FormalParametersNeedMeaningfulNames.group = naming
ShortVariable.group                     = naming
LongVariable.group                      = naming
ShortMethodName.group                   = naming
MethodWithSameNameAsEnclosingClass.group = naming
AvoidFieldNameMatchingTypeName.group    = naming


# Formatting
# --------------------------------------------
formatting.ruleDefault.category         = Error
formatting.ruleDefault.deduction        = 1
formattingWarning.ruleDefault.category  = Warning
formattingWarning.ruleDefault.deduction = 0

# Formatting Checkstyle
# --------------------
FileTabCharacter.group                  = formatting
LineLength.group                        = formatting
Indentation.group                       = formatting
EmptyForIteratorPad.group               = formattingWarning
NoWhitespaceAfter.group                 = formatting
NoWhitespaceBefore.group                = formatting
OperatorWrap.group                      = formattingWarning
WhitespaceAfter.group                   = formatting
WhitespaceAround.group                  = formatting
MethodParamPad.group                    = formatting
GenericWhitespace.group                 = formatting
ParenPad.group                          = formattingWarning
ModifierOrder.group                     = formattingWarning
RedundantModifier.group                 = formattingWarning
LeftCurly.group                         = formatting
NeedBraces.group                        = formatting
RightCurly.group                        = formatting
MultipleVariableDeclarations.group      = formatting
OneStatementPerLine.group               = formatting
UnnecessaryParentheses.group            = formatting
ArrayTypeStyle.group                    = formatting
UpperEll.group                          = formatting

# Formatting PMD
# --------------------
IfStmtsMustUseBraces.group              = formatting
WhileLoopsMustUseBracesRule.group       = formatting
IfElseStmtsMustUseBracesRule.group      = formatting
ForLoopsMustUseBracesRule.group         = formatting
SuspiciousOctalEscape.group             = formatting
AvoidUsingOctalValues.group             = formattingWarning
AvoidDecimalLiteralsInBigDecimalConstructor.group = formattingWarning


# Coding
# --------------------------------------------
coding.ruleDefault.category             = Error
coding.ruleDefault.deduction            = 2
codingMinor.ruleDefault.category        = Error
codingMinor.ruleDefault.deduction       = 1
codingWarning.ruleDefault.category      = Warning
codingWarning.ruleDefault.deduction     = 0

# Coding Checkstyle
# --------------------
EmptyBlock.group                        = codingMinor
CovariantEquals.group                   = coding
EmptyStatement.group                    = coding
HiddenField.group                       = coding
MagicNumber.group                       = codingMinor
RedundantThrows.group                   = coding
SimplifyBooleanExpression.group         = coding
SimplifyBooleanReturn.group             = coding
RegexpMultiline.group                   = coding
StringLiteralEquality.group             = coding
AvoidNestedBlocks.group                 = codingMinor
DefaultComesLast.group                  = coding
MissingCtor.group                       = coding
FallThrough.group                       = coding
RequireThis.group                       = codingMinor
VisibilityModifier.group                = coding
InnerAssignment.group                   = coding

FileLength.group                        = codingWarning
MethodLength.group                      = codingWarning
ParameterNumber.group                   = codingWarning

# Coding PMD
# --------------------
ForLoopShouldBeWhileLoop.group          = codingMinor
OverrideBothEqualsAndHashcode.group     = coding
DoubleCheckedLocking.group              = coding
ReturnFromFinallyBlock.group            = codingWarning
UnconditionalIfStatement.group          = codingWarning
BooleanInstantiation.group              = codingMinor
CollapsibleIfStatements.group           = codingWarning
ClassCastExceptionWithToArray.group     = coding
MisplacedNullCheck.group                = coding
BrokenNullCheck.group                   = coding
AvoidMultipleUnaryOperators.group       = coding
ExtendsObject.group                     = codingWarning
AvoidBranchingStatementAsLastInLoop.group = coding
DontCallThreadRun.group                 = codingMinor
DontUseFloatTypeForLoopIndices.group    = coding
SimplifyBooleanReturns.group            = coding
SimplifyBooleanExpressions.group        = coding
SwitchStmtsShouldHaveDefault.group      = coding
NonCaseLabelInSwitchStatement.group     = coding
EqualsNull.group                        = coding
InstantiationToGetClass.group           = codingMinor
IdempotentOperations.group              = coding
MissingStaticMethodInNonInstantiatableClass.group = coding
SimplifyConditional.group               = codingMinor
SingularField.group                     = coding
TooFewBranchesForASwitchStatement.group = coding
LogicInversion.group                    = codingMinor
EmptyCatchBlock.group                   = codingMinor
EmptyIfStmt.group                       = codingMinor
EmptyWhileStmt.group                    = codingMinor
EmptyTryBlock.group                     = codingMinor
EmptyFinallyBlock.group                 = codingMinor
EmptySwitchStatements.group             = codingMinor
EmptySynchronizedBlock.group            = codingMinor
EmptyInitializer.group                  = codingMinor
EmptyStatementBlock.group               = codingMinor
EmptyStaticInitializer.group            = codingMinor
DuplicateImports.group                  = codingMinor
DontImportJavaLang.group                = codingMinor
UnusedImports.group                     = codingMinor
ImportFromSamePackage.group             = codingMinor
SuspiciousHashcodeMethodName.group      = coding
AvoidThrowingNullPointerException.group = codingMinor
AvoidRethrowingException.group          = codingMinor
DoNotExtendJavaLangError.group          = codingMinor
DoNotThrowExceptionInFinally.group      = codingWarning
AvoidThrowingNewInstanceOfSameException.group = codingMinor
StringInstantiation.group               = codingMinor
UnnecessaryCaseChange.group             = codingWarning
UnnecessaryConversionTemporary.group    = codingWarning
UnnecessaryReturn.group                 = codingWarning
UnnecessaryFinalModifier.group          = codingWarning
UselessOverridingMethod.group           = codingWarning
UselessOperationOnImmutable.group       = coding
UnusedNullCheckInEquals.group           = codingWarning
UnusedPrivateField.group                = coding
UnusedLocalVariable.group               = coding
UnusedPrivateMethod.group               = coding
UnusedFormalParameter.group             = codingWarning

ExcessiveMethodLength.group             = codingWarning
ExcessiveParameterList.group            = codingWarning
ExcessiveClassLength.group              = codingWarning
TooManyFields.group                     = codingWarning


# Documentation
# --------------------------------------------
documentation.ruleDefault.category      = Error
documentation.ruleDefault.deduction     = 2

# Documentation Checkstyle
# --------------------
JavadocMethod.group                     = documentation
JavadocType.group                       = documentation
JavadocVariable.group                   = documentation
JavadocStyle.group                      = documentation
JavadocStyle.category                   = Warning
JavadocStyle.deduction                  = 0

TodoComment.group                       = documentation
TodoComment.category                    = Suggestion
TodoComment.deduction                   = 0

# For comment placeholders
RegexpSingleline.group                  = documentation

# Documentation PMD
# --------------------
UncommentedEmptyMethod.group            = documentation
UncommentedEmptyConstructor.group       = documentation


# Testing
# --------------------------------------------
testing.ruleDefault.category            = Error
testing.ruleDefault.deduction           = 5
testingMinor.ruleDefault.category       = Error
testingMinor.ruleDefault.deduction      = 1

# Testing PMD
# --------------------
JUnitTestClassNeedsTestCase.group       = testing
JUnit3ConstantAssertion.group           = testing
JUnit4ConstantAssertion.group           = testing
JUnit3TestsHaveAssertions.group         = testing
JUnit4TestsHaveAssertions.group         = testing
JUnitStaticSuite.group                  = testing
JUnitSpelling.group                     = testing
JUnitAssertionsShouldIncludeMessage.group = testingMinor
UseAssertSameInsteadOfAssertTrue.group  = testingMinor
UseAssertNullInsteadOfAssertTrue.group  = testingMinor
SimplifyBooleanAssertion.group          = testingMinor


# Only suggestions, no point deductions
# --------------------------------------------
suggestion.ruleDefault.category         = Suggestion
suggestion.ruleDefault.deduction        = 0

LooseCouplingRule.category              = suggestion
JumbledIncrementer.category             = suggestion


# Custom ...
# --------------------------------------------
ProhibitedGreenfootImport.category      = Error
ProhibitedGreenfootImport.deduction     = 5
AvoidAccessibilityAlteration.group      = coding
AvoidAccessibilityAlteration.deduction  = 5
