# Global settings for all tool markup together
# --------------------------------------------
maxDeductionsInFile       = ${maxDeduction}
maxDeductionsInAssignment = ${maxDeduction}
groups = \
    naming,\
    formatting,\
    formattingWarning,\
    coding,\
    codingMinor,\
    codingWarning,\
    documentation,\
    testing,\
    testingMinor,\
    suggestion
groupNames = \
    Naming,\
    Formatting,\
    Formatting,\
    Code Style,\
    Code Style,\
    Code Style,\
    Documentation,\
    Testing,\
    Testing,\
    Suggestion

# Defaults for group-wide limits
# --------------------------------------------
groupDefault.maxDeductionsInFile        = ${maxDeduction}
groupDefault.maxDeductionsInAssignment  = ${maxDeduction}

# Defaults for rules limits
# --------------------------------------------
ruleDefault.group                       = coding
ruleDefault.deduction                   = 1
ruleDefault.category                    = Error
#ruleDefault.maxBeforeCollapsing        = 100000
ruleDefault.maxDeductionsInFile         = ${maxDeduction}
ruleDefault.maxDeductionsInAssignment   = ${maxDeduction}


# Naming
# --------------------------------------------
naming.ruleDefault.category             = Error
naming.ruleDefault.deduction            = 2

# Naming Checkstyle
# --------------------
ConstantName.group                      = naming
LocalVariableName.group                 = naming
LocalFinalVariableName.group            = naming
MemberName.group                        = naming
MethodName.group                        = naming
ParameterName.group                     = naming
StaticVariableName.group                = naming
TypeName.group                          = naming
MethodTypeParameterName.group           = naming
ClassTypeParameterName.group            = naming
PackageName.group                       = naming

# Naming PMD
# --------------------
FormalParametersNeedMeaningfulNames.group = naming
ShortVariable.group                     = naming
LongVariable.group                      = naming
ShortMethodName.group                   = naming
MethodWithSameNameAsEnclosingClass.group = naming
AvoidFieldNameMatchingTypeName.group    = naming


# Formatting
# --------------------------------------------
formatting.ruleDefault.category         = Error
formatting.ruleDefault.deduction        = 1
formattingWarning.ruleDefault.category  = Warning
formattingWarning.ruleDefault.deduction = 0

# Formatting Checkstyle
# --------------------
FileTabCharacter.group                  = formatting
LineLength.group                        = formatting
Indentation.group                       = formatting
EmptyForIteratorPad.group               = formattingWarning
NoWhitespaceAfter.group                 = formatting
NoWhitespaceBefore.group                = formatting
OperatorWrap.group                      = formattingWarning
WhitespaceAfter.group                   = formatting
WhitespaceAround.group                  = formatting
MethodParamPad.group                    = formatting
GenericWhitespace.group                 = formatting
ParenPad.group                          = formattingWarning
ModifierOrder.group                     = formattingWarning
RedundantModifier.group                 = formattingWarning
LeftCurly.group                         = formatting
NeedBraces.group                        = formatting
RightCurly.group                        = formatting
MultipleVariableDeclarations.group      = formatting
OneStatementPerLine.group               = formatting
UnnecessaryParentheses.group            = formatting
ArrayTypeStyle.group                    = formatting
UpperEll.group                          = formatting

# Formatting PMD
# --------------------
IfStmtsMustUseBraces.group              = formatting
WhileLoopsMustUseBracesRule.group       = formatting
IfElseStmtsMustUseBracesRule.group      = formatting
ForLoopsMustUseBracesRule.group         = formatting
SuspiciousOctalEscape.group             = formatting
AvoidUsingOctalValues.group             = formattingWarning
AvoidDecimalLiteralsInBigDecimalConstructor.group = formattingWarning


# Coding
# --------------------------------------------
coding.ruleDefault.category             = Error
coding.ruleDefault.deduction            = 2
codingMinor.ruleDefault.category        = Error
codingMinor.ruleDefault.deduction       = 1
codingWarning.ruleDefault.category      = Warning
codingWarning.ruleDefault.deduction     = 0

# Coding Checkstyle
# --------------------
EmptyBlock.group                        = codingMinor
CovariantEquals.group                   = coding
EmptyStatement.group                    = coding
HiddenField.group                       = coding
MagicNumber.group                       = codingMinor
RedundantThrows.group                   = coding
SimplifyBooleanExpressions.group        = coding
SimplifyBooleanReturns.group            = coding
RegexpMultiline.group                   = coding
StringLiteralEquality.group             = coding
AvoidNestedBlocks.group                 = codingMinor
DefaultComesLast.group                  = coding
MissingCtor.group                       = coding
FallThrough.group                       = coding
RequireThis.group                       = codingMinor
VisibilityModifier.group                = coding
InnerAssignment.group                   = coding

FileLength.group                        = codingWarning
MethodLength.group                      = codingWarning
ParameterNumber.group                   = codingWarning

# Coding PMD
# --------------------
ForLoopShouldBeWhileLoop.group          = codingMinor
OverrideBothEqualsAndHashcode.group     = coding
DoubleCheckedLocking.group              = coding
ReturnFromFinallyBlock.group            = codingWarning
UnconditionalIfStatement.group          = codingWarning
BooleanInstantiation.group              = codingMinor
CollapsibleIfStatements.group           = codingWarning
ClassCastExceptionWithToArray.group     = coding
MisplacedNullCheck.group                = coding
BrokenNullCheck.group                   = coding
AvoidMultipleUnaryOperators.group       = coding
ExtendsObject.group                     = codingWarning
AvoidBranchingStatementAsLastInLoop.group = coding
DontCallThreadRun.group                 = codingMinor
DontUseFloatTypeForLoopIndices.group    = coding
SimplifyBooleanReturns.group            = coding
SimplifyBooleanExpressions.group        = coding
SwitchStmtsShouldHaveDefault.group      = coding
NonCaseLabelInSwitchStatement.group     = coding
EqualsNull.group                        = coding
InstantiationToGetClass.group           = codingMinor
IdempotentOperations.group              = coding
MissingStaticMethodInNonInstantiatableClass.group = coding
SimplifyConditional.group               = codingMinor
SingularField.group                     = coding
TooFewBranchesForASwitchStatement.group = coding
LogicInversion.group                    = codingMinor
EmptyCatchBlock.group                   = codingMinor
EmptyIfStmt.group                       = codingMinor
EmptyWhileStmt.group                    = codingMinor
EmptyTryBlock.group                     = codingMinor
EmptyFinallyBlock.group                 = codingMinor
EmptySwitchStatements.group             = codingMinor
EmptySynchronizedBlock.group            = codingMinor
EmptyInitializer.group                  = codingMinor
EmptyStatementBlock.group               = codingMinor
EmptyStaticInitializer.group            = codingMinor
DuplicateImports.group                  = codingMinor
DontImportJavaLang.group                = codingMinor
UnusedImports.group                     = codingMinor
ImportFromSamePackage.group             = codingMinor
SuspiciousHashcodeMethodName.group      = coding
AvoidThrowingNullPointerException.group = codingMinor
AvoidRethrowingException.group          = codingMinor
DoNotExtendJavaLangError.group          = codingMinor
DoNotThrowExceptionInFinally.group      = codingWarning
AvoidThrowingNewInstanceOfSameException.group = codingMinor
StringInstantiation.group               = codingMinor
UnnecessaryCaseChange.group             = codingWarning
UnnecessaryConversionTemporary.group    = codingWarning
UnnecessaryReturn.group                 = codingWarning
UnnecessaryFinalModifier.group          = codingWarning
UselessOverridingMethod.group           = codingWarning
UselessOperationOnImmutable.group       = coding
UnusedNullCheckInEquals.group           = codingWarning
UnusedPrivateField.group                = coding
UnusedLocalVariable.group               = coding
UnusedPrivateMethod.group               = coding
UnusedFormalParameter.group             = codingWarning

ExcessiveMethodLength.group             = codingWarning
ExcessiveParameterList.group            = codingWarning
ExcessiveClassLength.group              = codingWarning
TooManyFields.group                     = codingWarning


# Documentation
# --------------------------------------------
documentation.ruleDefault.category      = Error
documentation.ruleDefault.deduction     = 2

# Documentation Checkstyle
# --------------------
JavadocMethod.group                     = documentation
JavadocType.group                       = documentation
JavadocVariable.group                   = documentation
JavadocStyle.group                      = documentation
JavadocStyle.category                   = Warning
JavadocStyle.deduction                  = 0

TodoComment.group                       = documentation
TodoComment.category                    = Suggestion
TodoComment.deduction                   = 0

# For comment placeholders
RegexpSingleline.group                  = documentation

# Documentation PMD
# --------------------
UncommentedEmptyMethod.group            = documentation
UncommentedEmptyConstructor.group       = documentation


# Testing
# --------------------------------------------
testing.ruleDefault.category            = Error
testing.ruleDefault.deduction           = 5
testingMinor.ruleDefault.category       = Error
testingMinor.ruleDefault.deduction      = 1

# Testing PMD
# --------------------
JUnitTestClassNeedsTestCase.group       = testing
JUnit3ConstantAssertion.group           = testing
JUnit4ConstantAssertion.group           = testing
JUnit3TestsHaveAssertions.group         = testing
JUnit4TestsHaveAssertions.group         = testing
JUnitStaticSuite.group                  = testing
JUnitSpelling.group                     = testing
JUnitAssertionsShouldIncludeMessage.group = testingMinor
UseAssertSameInsteadOfAssertTrue.group  = testingMinor
UseAssertNullInsteadOfAssertTrue.group  = testingMinor
SimplifyBooleanAssertion.group          = testingMinor


# Only suggestions, no point deductions
# --------------------------------------------
suggestion.ruleDefault.category         = Suggestion
suggestion.ruleDefault.deduction        = 0

LooseCouplingRule.category              = suggestion
JumbledIncrementer.category             = suggestion


# Custom ...
# --------------------------------------------
ProhibitedGreenfootImport.category      = Error
ProhibitedGreenfootImport.deduction     = 5
AvoidAccessibilityAlteration.group      = coding
AvoidAccessibilityAlteration.deduction  = 5


# FindBugs BAD_PRACTICE
# --------------------------------------------
VA_FORMAT_STRING_USES_NEWLINE.group = codingMinor
ES_COMPARING_STRINGS_WITH_EQ.group = codingMinor
EQ_COMPARETO_USE_OBJECT_EQUALS.group = codingMinor
DM_EXIT.group = codingMinor
RR_NOT_CHECKED.group = codingMinor
NM_CLASS_NAMING_CONVENTION.group = codingMinor
EQ_GETCLASS_AND_CLASS_CONSTANT.group = codingMinor
NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT.group = codingMinor
RV_RETURN_VALUE_IGNORED_BAD_PRACTICE.group = codingMinor
BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS.group = codingMinor
ES_COMPARING_PARAMETER_STRING_WITH_EQ.group = codingMinor
SE_COMPARATOR_SHOULD_BE_SERIALIZABLE.group = codingMinor
OS_OPEN_STREAM.group = codingMinor
CO_SELF_NO_OBJECT.group = codingMinor
CO_COMPARETO_INCORRECT_FLOATING.group = codingMinor
SR_NOT_CHECKED.group = codingMinor
NP_TOSTRING_COULD_RETURN_NULL.group = codingMinor
HE_EQUALS_NO_HASHCODE.group = codingMinor
NM_CLASS_NOT_EXCEPTION.group = codingMinor
HE_INHERITS_EQUALS_USE_HASHCODE.group = codingMinor
CNT_ROUGH_CONSTANT_VALUE.group = codingMinor
IT_NO_SUCH_ELEMENT.group = codingMinor
CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE.group = codingMinor
DMI_RANDOM_USED_ONLY_ONCE.group = codingMinor
EQ_SELF_NO_OBJECT.group = codingMinor
NM_FIELD_NAMING_CONVENTION.group = codingMinor
DE_MIGHT_IGNORE.group = codingMinor
EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS.group = codingMinor
NM_SAME_SIMPLE_NAME_AS_SUPERCLASS.group = codingMinor
NP_BOOLEAN_RETURN_NULL.group = codingMinor
RC_REF_COMPARISON_BAD_PRACTICE.group = codingMinor
RV_NEGATING_RESULT_OF_COMPARETO.group = codingMinor
CN_IDIOM.group = codingMinor
NM_SAME_SIMPLE_NAME_AS_INTERFACE.group = codingMinor
DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION.group = codingMinor
ME_ENUM_FIELD_SETTER.group = codingMinor
SE_BAD_FIELD.group = codingMinor
RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN.group = codingMinor
SE_BAD_FIELD_STORE.group = codingMinor
CN_IDIOM_NO_SUPER_CALL.group = codingMinor
FI_EXPLICIT_INVOCATION.group = codingMinor
NM_VERY_CONFUSING_INTENTIONAL.group = codingMinor
SE_NONSTATIC_SERIALVERSIONID.group = codingMinor


# FindBugs CORRECTNESS
# --------------------------------------------
IJU_SETUP_NO_SUPER.group = coding
UWF_UNWRITTEN_FIELD.group = coding
UWF_NULL_FIELD.group = coding
EC_BAD_ARRAY_COMPARE.group = coding
NP_UNWRITTEN_FIELD.group = coding
NP_NULL_ON_SOME_PATH_EXCEPTION.group = coding
NP_NONNULL_PARAM_VIOLATION.group = coding
EC_UNRELATED_TYPES.group = coding
UR_UNINIT_READ.group = coding
NP_NULL_ON_SOME_PATH.group = coding
RV_ABSOLUTE_VALUE_OF_RANDOM_INT.group = coding
RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE.group = coding
DMI_INVOKING_TOSTRING_ON_ARRAY.group = coding
EQ_SELF_USE_OBJECT.group = coding
RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE.group = coding
IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN.group = coding
NP_NULL_PARAM_DEREF_NONVIRTUAL.group = coding
RV_RETURN_VALUE_IGNORED.group = coding
IL_INFINITE_RECURSIVE_LOOP.group = coding
SA_FIELD_SELF_ASSIGNMENT.group = coding
RpC_REPEATED_CONDITIONAL_TEST.group = coding
NP_ALWAYS_NULL.group = coding
NP_NULL_PARAM_DEREF.group = coding
RC_REF_COMPARISON.group = coding
EC_NULL_ARG.group = coding
SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH.group = coding
NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH.group = coding
RV_01_TO_INT.group = coding
INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE.group = coding
EC_ARRAY_AND_NONARRAY.group = coding
RV_EXCEPTION_NOT_THROWN.group = coding
IL_INFINITE_LOOP.group = coding
NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS.group = coding
BIT_ADD_OF_SIGNED_BYTE.group = coding
BC_IMPOSSIBLE_INSTANCEOF.group = coding
EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC.group = coding
SA_LOCAL_SELF_COMPARISON.group = coding
RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION.group = coding
GC_UNRELATED_TYPES.group = coding
NM_VERY_CONFUSING.group = coding
RANGE_ARRAY_INDEX.group = coding
VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED.group = coding
ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL.group = coding
BIT_IOR_OF_SIGNED_BYTE.group = coding
BC_IMPOSSIBLE_CAST.group = coding
ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND.group = coding
BC_IMPOSSIBLE_DOWNCAST.group = coding
HE_USE_OF_UNHASHABLE_CLASS.group = coding
DLS_OVERWRITTEN_INCREMENT.group = coding
NP_GUARANTEED_DEREF.group = coding
NP_NULL_INSTANCEOF.group = coding
SA_FIELD_SELF_COMPARISON.group = coding
EC_UNRELATED_CLASS_AND_INTERFACE.group = coding
IJU_TEARDOWN_NO_SUPER.group = coding
NM_BAD_EQUAL.group = coding
EQ_ALWAYS_FALSE.group = coding
SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD.group = coding
FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER.group = coding
MF_CLASS_MASKS_FIELD.group = coding
EC_UNRELATED_TYPES_USING_POINTER_EQUALITY.group = coding
DLS_DEAD_LOCAL_INCREMENT_IN_RETURN.group = coding
VA_FORMAT_STRING_BAD_CONVERSION.group = coding
VA_FORMAT_STRING_ILLEGAL.group = coding
EQ_ALWAYS_TRUE.group = coding
QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT.group = coding
INT_BAD_COMPARISON_WITH_SIGNED_BYTE.group = coding
EQ_COMPARING_CLASS_NAMES.group = coding
NP_CLOSING_NULL.group = coding
NM_LCASE_TOSTRING.group = coding
RV_ABSOLUTE_VALUE_OF_HASHCODE.group = coding
NP_ALWAYS_NULL_EXCEPTION.group = coding
VA_FORMAT_STRING_MISSING_ARGUMENT.group = coding
EC_INCOMPATIBLE_ARRAY_COMPARE.group = coding
HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS.group = coding
RANGE_ARRAY_LENGTH.group = coding
BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY.group = coding
RANGE_ARRAY_OFFSET.group = coding
RANGE_STRING_INDEX.group = coding
SA_FIELD_SELF_COMPUTATION.group = coding
NM_METHOD_CONSTRUCTOR_CONFUSION.group = coding
NM_WRONG_PACKAGE.group = coding
SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW.group = coding
DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY.group = coding
DMI_VACUOUS_SELF_COLLECTION_CALL.group = coding
ICAST_BAD_SHIFT_AMOUNT.group = coding
UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS.group = coding
VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED.group = coding
DM_INVALID_MIN_MAX.group = coding
RE_POSSIBLE_UNINTENDED_PATTERN.group = coding
DLS_DEAD_STORE_OF_CLASS_LITERAL.group = coding
VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY.group = coding


# FindBugs STYLE
# --------------------------------------------
DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD.group = coding
FE_FLOATING_POINT_EQUALITY.group = codingMinor
ICAST_IDIV_CAST_TO_DOUBLE.group = coding
ICAST_INTEGER_MULTIPLY_CAST_TO_LONG.group = coding
EQ_DOESNT_OVERRIDE_EQUALS.group = coding
NS_DANGEROUS_NON_SHORT_CIRCUIT.group = codingMinor
DLS_DEAD_LOCAL_STORE_IN_RETURN.group = codingMinor
INT_BAD_REM_BY_1.group = codingMinor

DLS_DEAD_LOCAL_STORE.group = codingWarning
RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT.group = codingWarning
ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD.group = codingWarning
UC_USELESS_OBJECT.group = codingWarning
SF_SWITCH_NO_DEFAULT.group = codingWarning
UC_USELESS_CONDITION.group = codingWarning
BC_UNCONFIRMED_CAST.group = codingWarning
RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE.group = codingWarning
BC_VACUOUS_INSTANCEOF.group = codingWarning
REC_CATCH_EXCEPTION.group = codingWarning
UC_USELESS_VOID_METHOD.group = codingWarning
SA_FIELD_DOUBLE_ASSIGNMENT.group = codingWarning
DB_DUPLICATE_BRANCHES.group = codingWarning
URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD.group = codingWarning
UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD.group = codingWarning
NP_LOAD_OF_KNOWN_NULL_VALUE.group = codingWarning
DMI_HARDCODED_ABSOLUTE_FILENAME.group = codingWarning
SF_SWITCH_FALLTHROUGH.group = codingWarning
RV_RETURN_VALUE_IGNORED_INFERRED.group = codingWarning
IM_AVERAGE_COMPUTATION_COULD_OVERFLOW.group = codingWarning
NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE.group = codingWarning
UCF_USELESS_CONTROL_FLOW.group = codingWarning
SA_LOCAL_SELF_ASSIGNMENT.group = codingWarning
INT_VACUOUS_BIT_OPERATION.group = codingWarning
RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE.group = codingWarning
NS_NON_SHORT_CIRCUIT.group = codingWarning
UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD.group = codingWarning
NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD.group = codingWarning
QF_QUESTIONABLE_FOR_LOOP.group = codingWarning
SA_LOCAL_DOUBLE_ASSIGNMENT.group = codingWarning
NP_IMMEDIATE_DEREFERENCE_OF_READLINE.group = codingWarning
ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT.group = codingWarning
NP_DEREFERENCE_OF_READLINE_VALUE.group = codingWarning
EQ_UNUSUAL.group = codingWarning
NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE.group = codingWarning
DLS_DEAD_LOCAL_STORE_OF_NULL.group = codingWarning
UCF_USELESS_CONTROL_FLOW_NEXT_LINE.group = codingWarning
IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD.group = codingWarning
DMI_NONSERIALIZABLE_OBJECT_WRITTEN.group = codingWarning
RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE.group = codingWarning
RV_DONT_JUST_NULL_CHECK_READLINE.group = codingWarning
RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES.group = codingWarning
UC_USELESS_OBJECT_STACK.group = codingWarning
